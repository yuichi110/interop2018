プログラム解説

(1) netmiko_ntp
NTPのSync状態を確認するコマンドをnetmikoライブラリ経由で多くの機器から並列に取得してくる。
showコマンドを多数の機器で発行する参考になるかもしれません。
Dellスイッチでの動作が若干怪しいので、paramikoという別のライブラリを使っています。

(2)dropcheck_mac.py
dropcheckをmacで実行するためのツール
1. wifiが切ってあるかの確認
2. interfaceのIPを確認。
3. default gatewayを取得し、それに対するpingを実施
4. 残りのチェックコマンドをまとめて実行という流れ
これらを指定した優先度順に結果表示するというものです。
内部で使っているコマンドがmac依存ですが、windowsやlinuxのコマンドに置き換えれば、
他の機種でも動くと思います。

(3)dtraceroute
全てのノードから全てのノードに向けてtracerouteを実施し、経路情報をグラフ化するというもの。
取得からグラフ化まで全ていっぺんにやるのではなく、
 - tracerouteの結果を取得して、変換するコード
 - トポロジー書き出すコード
 - トポロジーの画像群をまとめてpdf化するコード
と分けています。
可能な限りインターフェースのIPをノードのIPに変換することで、トポロジーを単純化させています。

(4)javascript_fp_animation
これは趣味で開発中のブラウザ上で動くトポロジー描画及び、その上で動くフローアニメーションの作成ツールで、
Function Pool 内のフローを表現してみたものです。

(5) scapy_cdp_lldp
scapyというライブラリを使って、受信したlldpのパケットを解析し、その内容を表示させています。
wiresharkをPCで使えばはやいですが、ラズパイのような小型デバイスで使えば小さくて住みます。
CDPも動くと思います。

(6) rest_remote_dropcheck
ラズパイに搭載されたドロップチェックツールです。
上記の(2)と似たものを作っても面白くないので、REST API経由でリモートから操作されることを
想定して開発してみました。
VLAN対応していますが、特定のVLANをオフにしたりdhcpリリースしたりする機能は実装されていません。
全部のVLANが使える状態で、MTRなどのソースを指定できないツールを使うためにはもう一手間必要です。

(7) droppoint_recorder
ping_festa用に即興で開発したツール。ping_festa後なので使ってはいませんが。
MTR相当(宛先までTTLを増やしながら一気にICMP_ECHO_REQUESTを投げる)のことをやり、
その結果を全てログに吐き出します。
pingのように「届いた/届かなかった」だけでなく、いつどこまで届き、どこで落ちていたかを
正確に記録できるはずです。
時間が足りず、グラフ化までは実現できていませんが、キレイに表示できると超わかりやすいと
思います。
